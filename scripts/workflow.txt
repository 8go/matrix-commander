The rough workflow is:
======================

git pull # get the latest from Github
write some code
run test scripts in tests/test*sh and tests/test*py

scripts/lintmc.sh
scripts/update-1-version.sh
# alternatively: scripts/update-1-version.sh --minor # this skips Action workflow
scripts/update-2-help.py
scripts/update-3-readme.py
# produce PyPi distribution
# maybe cancel upload to PyPi if Github Actions workflow is preferred
scripts/create-pypi-package.sh # maybe skip this for minor versions

git status
# don't forget to add the new PyPi dist/* files
git add dist/ # must do this! commit -a will not include them
git status

git commit # or git commit -a
# alternatively: git commit -m "release: v$(echo VERSION)" # being lazy
scripts/update-4-tag.sh # git tag v$(echo VERSION)

git push # 1st push, since there is no tag, no trigger on workflows
git push origin v"$(cat VERSION)" # 2nd push, pushing tag
# only pushing a tag kicks off the workflow and only if not a minor version
# tag push of major version kicks off the Docker actions workflow on Github
# tag push of major version kicks off the PiPy actions workflow on Github
# Note: a PR does not trigger Github Actions workflows

# double-check if everything is in order
git tag --list -n | head -n 7 # list tags
git log --pretty=oneline -n 7 # now it shows tag in commit hash

# watch Actions on Github, iff any
