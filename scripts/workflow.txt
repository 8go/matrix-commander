The rough workflow is:
======================

git pull # get the latest from Github
write some code
run test scripts in tests/test*sh and tests/test*py

scripts/lintmc.sh
scripts/update-1-version.sh
scripts/update-2-help.py
scripts/update-3-readme.py
# produce PyPi distribution
# maybe cancel upload to PyPi if Github Actions workflow is preferred
scripts/create-pypi-package.sh

git status
# don't forget to add the new PyPi dist/* files
git add dist/
git status

git commit
git commit -a
git commit -m "release: v$(echo VERSION)" # lazy alternative
scripts/update-4-tag.sh # git tag v$(echo VERSION)

git push && git push origin v"$(cat VERSION)"
# that kicks off the Docker actions workflow on Github
# that kicks off the PiPy actions workflow on Github

# Note: a PR does not trigger Github Actions workflows

# double-check if everything is in order
git tag --list -n | head -n 7 # list tags
git log --pretty=oneline | head -n 7 # now it shows tag in commit hash

# watch Actions on Github
